# Python code obfuscated by www.development-tools.net 
 

import base64, codecs
magic = 'IyEvdXNyL2Jpbi9weXRob24zCiMgTUlUIExpY2Vuc2UKIyAKIyBDb3B5cmlnaHQgKGMpIDIwMjAgRXZhbiBDdXN0b2RpbwojIAojIFBlcm1pc3Npb24gaXMgaGVyZWJ5IGdyYW50ZWQsIGZyZWUgb2YgY2hhcmdlLCB0byBhbnkgcGVyc29uIG9idGFpbmluZyBhIGNvcHkKIyBvZiB0aGlzIHNvZnR3YXJlIGFuZCBhc3NvY2lhdGVkIGRvY3VtZW50YXRpb24gZmlsZXMgKHRoZSAiU29mdHdhcmUiKSwgdG8gZGVhbAojIGluIHRoZSBTb2Z0d2FyZSB3aXRob3V0IHJlc3RyaWN0aW9uLCBpbmNsdWRpbmcgd2l0aG91dCBsaW1pdGF0aW9uIHRoZSByaWdodHMKIyB0byB1c2UsIGNvcHksIG1vZGlmeSwgbWVyZ2UsIHB1Ymxpc2gsIGRpc3RyaWJ1dGUsIHN1YmxpY2Vuc2UsIGFuZC9vciBzZWxsCiMgY29waWVzIG9mIHRoZSBTb2Z0d2FyZSwgYW5kIHRvIHBlcm1pdCBwZXJzb25zIHRvIHdob20gdGhlIFNvZnR3YXJlIGlzCiMgZnVybmlzaGVkIHRvIGRvIHNvLCBzdWJqZWN0IHRvIHRoZSBmb2xsb3dpbmcgY29uZGl0aW9uczoKIyAKIyBUaGUgYWJvdmUgY29weXJpZ2h0IG5vdGljZSBhbmQgdGhpcyBwZXJtaXNzaW9uIG5vdGljZSBzaGFsbCBiZSBpbmNsdWRlZCBpbiBhbGwKIyBjb3BpZXMgb3Igc3Vic3RhbnRpYWwgcG9ydGlvbnMgb2YgdGhlIFNvZnR3YXJlLgojIAojIFRIRSBTT0ZUV0FSRSBJUyBQUk9WSURFRCAiQVMgSVMiLCBXSVRIT1VUIFdBUlJBTlRZIE9GIEFOWSBLSU5ELCBFWFBSRVNTIE9SCiMgSU1QTElFRCwgSU5DTFVESU5HIEJVVCBOT1QgTElNSVRFRCBUTyBUSEUgV0FSUkFOVElFUyBPRiBNRVJDSEFOVEFCSUxJVFksCiMgRklUTkVTUyBGT1IgQSBQQVJUSUNVTEFSIFBVUlBPU0UgQU5EIE5PTklORlJJTkdFTUVOVC4gSU4gTk8gRVZFTlQgU0hBTEwgVEhFCiMgQVVUSE9SUyBPUiBDT1BZUklHSFQgSE9MREVSUyBCRSBMSUFCTEUgRk9SIEFOWSBDTEFJTSwgREFNQUdFUyBPUiBPVEhFUgojIExJQUJJTElUWSwgV0hFVEhFUiBJTiBBTiBBQ1RJT04gT0YgQ09OVFJBQ1QsIFRPUlQgT1IgT1RIRVJXSVNFLCBBUklTSU5HIEZST00sCiMgT1VUIE9GIE9SIElOIENPTk5FQ1RJT04gV0lUSCBUSEUgU09GVFdBUkUgT1IgVEhFIFVTRSBPUiBPVEhFUiBERUFMSU5HUyBJTiBUSEUKIyBTT0ZUV0FSRS4KaW1wb3J0IGFyZ3BhcnNlCmltcG9ydCByZQppbXBvcnQgdGltZQppbXBvcnQgc3lzCmltcG9ydCBvcwppbXBvcnQgcmFuZG9tCmltcG9ydCBzdHJpbmcKaW1wb3J0IGltcG9ydGxpYgppbXBvcnQgaGFzaGxpYgpmcm9tIGNvcHkgaW1wb3J0IGRlZXBjb3B5CmZyb20gdGltZSBpbXBvcnQgc2xlZXAKZnJvbSBkYXRldGltZSBpbXBvcnQgZGF0ZXRpbWUKZnJvbSBsaWIuUGF5bG9hZCBpbXBvcnQgUGF5bG9hZCwgQ2h1bmtlZCwgRW5kQ2h1bmsKZnJvbSBsaWIuRWFzeVNTTCBpbXBvcnQgRWFzeVNTTApmcm9tIGxpYi5jb2xvcmFtYSBpbXBvcnQgRm9yZSwgU3R5bGUKZnJvbSB1cmxsaWIucGFyc2UgaW1wb3J0IHVybHBhcnNlCgpjbGFzcyBEZXN5bmNyKCk6CglkZWYgX19pbml0X18oc2VsZiwgY29uZmlnZmlsZSwgc21ob3N0LCBzbXBvcnQ9NDQzLCB1cmw9IiIsIG1ldGhvZD0iUE9TVCIsIGVuZHBvaW50PSIvIiwgIFNTTEZsYWc9RmFsc2UsIGxvZ2g9Tm9uZSwgc21hcmdzPU5vbmUpOgoJCXNlbGYuX2NvbmZpZ2ZpbGUgPSBjb25maWdmaWxlCgkJc2VsZi5faG9zdCA9IHNtaG9zdAoJCXNlbGYuX3BvcnQgPSBzbXBvcnQKCQlzZWxmLl9tZXRob2QgPSBtZXRob2QKCQlzZWxmLl9lbmRwb2ludCA9IGVuZHBvaW50CgkJc2VsZi5fdmhvc3QgPSBzbWFyZ3Mudmhvc3QKCQlzZWxmLl91cmwgPSB1cmwKCQlzZWxmLl90aW1lb3V0ID0gZmxvYXQoc21hcmdzLnRpbWVvdXQpCgkJc2VsZi5zc2xfZmxhZyA9IFNTTEZsYWcKCQlzZWxmLl9sb2doID0gbG9naAoJCXNlbGYuX3F1aWV0ID0gc21hcmdzLnF1aWV0CgkJc2VsZi5fZXhpdF9lYXJseSA9IHNtYXJncy5leGl0X2Vhcmx5CgkJc2VsZi5fYXR0ZW1wdHMgPSAwCgkJc2VsZi5fY29va2llcyA9IFtdCgoJZGVmIF90ZXN0KHNlbGYsIHBheWxvYWRfb2JqKToKCQl0cnk6CgkJCXdlYiA9IEVhc3lTU0woc2VsZi5zc2xfZmxhZykKCQkJd2ViLmNvbm5lY3Qoc2VsZi5faG9zdCwgc2VsZi5fcG9ydCwgc2VsZi5fdGltZW91dCkKCQkJd2ViLnNlbmQoc3RyKHBheWxvYWRfb2JqKS5lbmNvZGUoKSkKCQkJI3ByaW50KHBheWxvYWRfb2JqKQoJCQlzdGFydF90aW1lID0gZGF0ZXRpbWUubm93KCkKCQkJcmVzID0gd2ViLnJlY3ZfbmIoc2VsZi5fdGltZW91dCkKCQkJZW5kX3RpbWUgPSBkYXRldGltZS5ub3coKQoJCQl3ZWIuY2xvc2UoKQoJCQlpZiByZXMgaXMgTm9uZToKCQkJCWRlbHRhX3RpbWUgPSBlbmRfdGltZSAtIHN0YXJ0X3RpbWUKCQkJCWlmIGRlbHRhX3RpbWUuc2Vjb25kcyA8IChzZWxmLl90aW1lb3V0LTEpOgoJCQkJCXJldHVybiAoMiwgcmVzLCBwYXlsb2FkX29iaikgIyBSZXR1cm4gY29kZSAyIGlmIGRpc2Nvbm5lY3RlZCBiZWZvcmUgdGltZW91dAoJCQkJcmV0dXJuICgxLCByZXMsIHBheWxvYWRfb2JqKSAjIFJldHVybiBjb2RlIDEgaWYgY29ubmVjdGlvbiB0aW1lZG91dAoJCQkjIEZpbHRlciBvdXQgcHJvYmxlbWF0aWMgY2hhcmFjdGVycwoJCQlyZXNfZmlsdGVyZWQgPSAiIgoJCQlmb3Igc2luZ2xlIGluIHJlczoKCQkJCWlmIHNpbmdsZSA+IDB4N0Y6CgkJCQkJcmVzX2ZpbHRlcmVkICs9ICdceDMwJwoJCQkJZWxzZToKCQkJCQlyZXNfZmlsdGVyZWQgKz0gY2hyKHNpbmdsZSkKCQkJcmVzID0gcmVzX2ZpbHRlcmVkCgkJCSNpZiAnNTA0JyBpbiByZXM6CgkJCQoJCQkjcHJpbnQoIlxuXG4iK3N0cihzdHIocGF5bG9hZF9vYmopKSkKCQkJI3ByaW50KCJcblxuIityZXMpCgkJCXJldHVybiAoMCwgcmVzLCBwYXlsb2FkX29iaikgIyBSZXR1cm4gY29kZSAwIGlmIG5vcm1hbCByZXNwb25zZSByZXR1cm5lZAoJCWV4Y2VwdCBFeGNlcHRpb24gYXMgZXhjZXB0aW9uX2RhdGE6CgkJCSNwcmludChleGNlcHRpb25fZGF0YSkKCQkJcmV0dXJuICgtMSwgTm9uZSwgcGF5bG9hZF9vYmopICMgUmV0dXJuIGNvZGUgLTEgaWYgc29tZSBleGNlcHQgb2NjdXJlZAoJCQoJZGVmIF9nZXRfY29va2llcyhzZWxmKToKCQlSTiA9ICJcclxuIgoJCXRyeToKCQkJY29va2llcyA9IFtdCgkJCXdlYiA9IEVhc3lTU0woc2VsZi5zc2xfZmxhZykKCQkJd2ViLmNvbm5lY3Qoc2VsZi5faG9zdCwgc2VsZi5fcG9ydCwgMi4wKQoJCQlwID0gUGF5bG9hZCgpCgkJCXAuaG9zdCA9IHNlbGYuX2hvc3QKCQkJcC5tZXRob2QgPSAiR0VUIgoJCQlwLmVuZHBvaW50ID0gc2VsZi5fZW5kcG9pbnQKCQkJcC5oZWFkZXIgID0gIl9fTUVUSE9EX18gX19FTkRQT0lOVF9fP2NiPV9fUkFORE9NX18gSFRUUC8xLjEiICsgUk4KCQkJcC5oZWFkZXIgKz0gIkhvc3Q6IF9fSE9TVF9fIiArIFJOCgkJCXAuaGVhZGVyICs9ICJVc2VyLUFnZW50OiBNb3ppbGxhLzUuMCAoV2luZG93cyBOVCAxMC4wOyBXaW42NDsgeDY0KSBBcHBsZVdlYktpdC81MzcuMzYgKEtIVE1MLCBsaWtlIEdlY2tvKSBDaHJvbWUvNzguMC4zOTA0Ljg3IFNhZmFyaS81MzcuMzYiICsgUk4KCQkJcC5oZWFkZXIgKz0gIkNvbnRlbnQtdHlwZTogYXBwbGljYXRpb24veC13d3ctZm9ybS11cmxlbmNvZGVkOyBjaGFyc2V0PVVURi04IiArIFJOCgkJCXAuaGVhZGVyICs9ICJDb250ZW50LUxlbmd0aDogMCIgKyBSTgoJCQlwLmJvZHkgPSAiIgoJCQkjcHJpbnQgKHN0cihwKSkKCQkJd2ViLnNlbmQoc3RyKHApLmVuY29kZSgpKQoJCQlzbGVlcCgwLjUpCgkJCXJlcyA9IHdlYi5yZWN2X25iKDIuMCkKCQkJd2ViLmNsb3NlKCkKCQkJaWYgKHJlcyBpcyBub3QgTm9uZSk6CgkJCQlyZXMgPSByZXMuZGVjb2RlKCkuc3BsaXQoIlxyXG4iKQoJCQkJZm9yIGVsZW0gaW4gcmVzOgoJCQkJCWlmIGxlbihlbGVtKSA+IDExOgoJCQkJCQlpZiBlbGVtWzA6MTFdLmxvd2VyKCkucmVwbGFjZSgiICIsICIiKSA9PSAic2V0LWNvb2tpZToiOgoJCQkJCQkJY29va2llID0gZWxlbS5sb3dlcigpLnJlcGxhY2UoInNldC1jb29raWU6IiwiIikKCQkJCQkJCWNvb2tpZSA9IGNvb2tpZS5zcGxpdCgiOyIpWzBd'
love = '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'
god = 'ZGdlIGNhc2UgdG8gYmUgc3VyZQoJCQljbHRlX3JlczIgPSBzZWxmLl9jaGVja19jbHRlKHRlX3BheWxvYWQsIDEpCgkJCWlmIGNsdGVfcmVzMlswXSA9PSAwOgoJCQkJc2VsZi5fYXR0ZW1wdHMgKz0gMQoJCQkJaWYgKHNlbGYuX2F0dGVtcHRzIDwgMyk6CgkJCQkJcmV0dXJuIHNlbGYuX2NyZWF0ZV9leGVjX3Rlc3QobmFtZSwgdGVfcGF5bG9hZCkKCQkJCWVsc2U6CgkJCQkJZGlzbXNnID0gRm9yZS5SRUQgKyAiUG90ZW50aWFsIENMVEUgSXNzdWUgRm91bmQiICsgRm9yZS5NQUdFTlRBICsgIiAtICIgKyBGb3JlLkNZQU4gKyBzZWxmLl9tZXRob2QgKyBGb3JlLk1BR0VOVEEgKyAiIEAgIiArIEZvcmUuQ1lBTiArIFsiaHR0cDovLyIsImh0dHBzOi8vIixdW3NlbGYuc3NsX2ZsYWddKyBzZWxmLl9ob3N0ICsgc2VsZi5fZW5kcG9pbnQgKyBGb3JlLk1BR0VOVEEgKyAiIC0gIiArIEZvcmUuQ1lBTiArIHNlbGYuX2NvbmZpZ2ZpbGUuc3BsaXQoJy8nKVstMV0gKyAiXG4iCgkJCQkJcHJldHR5X3ByaW50KG5hbWUsIGRpc21zZykKCQkJCQkKCQkJCQkjIFdyaXRlIHBheWxvYWQgb3V0IHRvIGZpbGUKCQkJCQl3cml0ZV9wYXlsb2FkKHNlbGYuX2hvc3QsIGNsdGVfcmVzWzJdLCAiQ0xURSIpCgkJCQkJc2VsZi5fYXR0ZW1wdHMgPSAwCgkJCQkJcmV0dXJuIFRydWUKCgkJCWVsc2U6CgkJCQkjIE5vIGVkZ2UgYmVoYXZpb3IgZm91bmQKCQkJCWRpc21zZyA9IEZvcmUuWUVMTE9XICsgIkNMVEUgVElNRU9VVCBPTiBCT1RIIExFTkdUSCA0IEFORCAxMSIgKyBbIlxuIiwgIiJdW3NlbGYuX3F1aWV0XQoJCQkJcHJldHR5X3ByaW50KG5hbWUsIGRpc21zZykKCgkJZWxpZiAodGVjbF9yZXNbMF0gPT0gMSk6CgkJCSMgUG90ZW50aWFsIFRFQ0wgZm91bmQKCQkJIyBMZXRzIGNoZWNrIHRoZSBlZGdlIGNhc2UgdG8gYmUgc3VyZQoJCQl0ZWNsX3JlczIgPSBzZWxmLl9jaGVja190ZWNsKHRlX3BheWxvYWQsIDEpCgkJCWlmIHRlY2xfcmVzMlswXSA9PSAwOgoJCQkJc2VsZi5fYXR0ZW1wdHMgKz0gMQoJCQkJaWYgKHNlbGYuX2F0dGVtcHRzIDwgMyk6CgkJCQkJcmV0dXJuIHNlbGYuX2NyZWF0ZV9leGVjX3Rlc3QobmFtZSwgdGVfcGF5bG9hZCkKCQkJCWVsc2U6CgkJCQkJI3ByaW50IChzdHIodGVjbF9yZXMyWzJdKSkKCQkJCQkjcHJpbnQgKHRlY2xfcmVzMlsxXSkKCQkJCQlkaXNtc2cgPSBGb3JlLlJFRCArICJQb3RlbnRpYWwgVEVDTCBJc3N1ZSBGb3VuZCIgKyBGb3JlLk1BR0VOVEEgKyAiIC0gIiArIEZvcmUuQ1lBTiArIHNlbGYuX21ldGhvZCArIEZvcmUuTUFHRU5UQSArICIgQCAiICsgRm9yZS5DWUFOICsgWyJodHRwOi8vIiwiaHR0cHM6Ly8iLF1bc2VsZi5zc2xfZmxhZ10rIHNlbGYuX2hvc3QgKyBzZWxmLl9lbmRwb2ludCArIEZvcmUuTUFHRU5UQSArICIgLSAiICsgRm9yZS5DWUFOICsgc2VsZi5fY29uZmlnZmlsZS5zcGxpdCgnLycpWy0xXSArICJcbiIKCQkJCQlwcmV0dHlfcHJpbnQobmFtZSwgZGlzbXNnKQoJCQkJCQoJCQkJCSMgV3JpdGUgcGF5bG9hZCBvdXQgdG8gZmlsZQoJCQkJCXdyaXRlX3BheWxvYWQoc2VsZi5faG9zdCwgdGVjbF9yZXNbMl0sICJURUNMIikKCQkJCQlzZWxmLl9hdHRlbXB0cyA9IDAKCQkJCQlyZXR1cm4gVHJ1ZQoJCQllbHNlOgoJCQkJIyBObyBlZGdlIGJlaGF2aW9yIGZvdW5kCgkJCQlkaXNtc2cgPSBGb3JlLllFTExPVyArICJURUNMIFRJTUVPVVQgT04gQk9USCBMRU5HVEggNiBBTkQgNSIgKyBbIlxuIiwgIiJdW3NlbGYuX3F1aWV0XQoJCQkJcHJldHR5X3ByaW50KG5hbWUsIGRpc21zZykKCgoJCSNlbGlmICgodGVjbF9yZXNbMF0gPT0gMSkgYW5kIChjbHRlX3Jlc1swXSA9PSAxKSk6CgkJIwkjIEJvdGggdHlwZXMgb2YgcGF5bG9hZHMgbm90IHN1cHBvcnRlZAoJCSMJZGlzbXNnID0gRm9yZS5ZRUxMT1cgKyAiTk9UIFNVUFBPUlRFRCIgKyBbIlxuIiwgIiJdW3NlbGYuX3F1aWV0XQoJCSMJcHJldHR5X3ByaW50KG5hbWUsIGRpc21zZykKCQllbGlmICgodGVjbF9yZXNbMF0gPT0gLTEpIG9yIChjbHRlX3Jlc1swXSA9PSAtMSkpOgoJCQkjIEVSUk9SCgkJCWRpc21zZyA9IEZvcmUuWUVMTE9XICsgIlNPQ0tFVCBFUlJPUiIgKyBbIlxuIiwgIiJdW3NlbGYuX3F1aWV0XQoJCQlwcmV0dHlfcHJpbnQobmFtZSwgZGlzbXNnKQoKCQllbGlmICgodGVjbF9yZXNbMF0gPT0gMCkgYW5kIChjbHRlX3Jlc1swXSA9PSAwKSk6CgkJCSMgTm8gRGVzeW5jIEZvdW5kCgkJCXRlY2xfbXNnID0gKEZvcmUuTUFHRU5UQSArICIgKFRFQ0w6ICIgKyBGb3JlLkNZQU4gKyIlLjJmIiArIEZvcmUuTUFHRU5UQSArICIgLSAiICsgXAoJCQlGb3JlLkNZQU4gKyIlcyIgKyBGb3JlLk1BR0VOVEEgKyAiKSIpICUgKHRlY2xfdGltZSwgdGVjbF9yZXNbMV1bOTo5KzNdKQoKCQkJY2x0ZV9tc2cgPSAoRm9yZS5NQUdFTlRBICsgIiAoQ0xURTogIiArIEZvcmUuQ1lBTiArIiUuMmYiICsgRm9yZS5NQUdFTlRBICsgIiAtICIgKyBcCgkJCUZvcmUuQ1lBTiArIiVzIiArIEZvcmUuTUFHRU5UQSArICIpIikgJSAoY2x0ZV90aW1lLCBjbHRlX3Jlc1sxXVs5OjkrM10pCgoJCQlkaXNtc2cgPSBGb3JlLkdSRUVOICsgIk9LIiArIHRlY2xfbXNnICsgY2x0ZV9tc2cgKyBbIlxuIiwgIiJdW3NlbGYuX3F1aWV0XQoJCQlwcmV0dHlfcHJpbnQobmFtZSwgZGlzbXNnKQoKCQllbGlmICgodGVjbF9yZXNbMF0gPT0gMikgb3IgKGNsdGVfcmVzWzBdID09IDIpKToKCQkJIyBEaXNjb25uZWN0ZWQKCQkJZGlzbXNnID0gRm9yZS5ZRUxMT1cgKyAiRElTQ09OTkVDVEVEIiArIFsiXG4iLCAiIl1bc2VsZi5fcXVpZXRdCgkJCXByZXR0eV9wcmludChuYW1lLCBkaXNtc2cpCgkJCQoJCXNlbGYuX2F0dGVtcHRzID0gMAoJCXJldHVybiBGYWxzZQoKZGVmIHByb2Nlc3NfdXJpKHVyaSk6Cgl1ID0gdXJscGFyc2UodXJpKQoKCWlmIHUuc2NoZW1lID09ICJodHRwcyI6CgkJc3NsX2ZsYWcgPSBUcnVlCgkJc3RkX3BvcnQgPSA0NDMKCWVsaWYgdS5zY2hlbWUgPT0gImh0dHAiOgoJCXNzbF9mbGFnID0gRmFsc2UKCQlzdGRfcG9ydCA9IDgwCgllbHNlOgoJCXByaW50X2luZm8oIkVycm9yIG1hbGZvcm1lZCBVUkwgbm90IHN1cHBvcnRlZDogJXMiICUgKEZvcmUuQ1lBTiArIHVyaSkpCgkJZXhpdCgxKQoKCWlmIHUucG9ydDoKCQlyZXR1cm4gKHUuaG9zdG5hbWUsIHUucG9ydCwgdS5wYXRoLCBzc2xfZmxhZykKCWVsc2U6CgkJcmV0dXJuICh1Lmhvc3RuYW1lLCBzdGRfcG9ydCwgdS5wYXRoLCBzc2xfZmxhZykKCmRlZiBDRih0ZXh0KToKCWdsb2JhbCBOT0NPTE9SCglpZiBOT0NPTE9SOgoJCWFuc2lfZXNjYXBlID0gcmUuY29tcGlsZShyJ1x4MUJbQC1fXVswLT9dKlsgLS9dKltALX5dJykKCQl0ZXh0ID0gYW5zaV9lc2NhcGUuc3ViKCcnLCB0ZXh0KQoJcmV0dXJuIHRleHQKCmRlZiBiYW5uZXIoc21fdmVyc2lvbik6CglwcmludChDRihGb3JlLkNZQU4pKQoJcHJpbnQoQ0YociIg4paI4paI4paI4paI4paIICDilojilojilojilojilojiloggIOKWiOKWiOKWiOKWiOKWiOKWiOKWiOKWiCDilojilogg4paI4paIICAg4paI4paIIOKWiOKWiOKWiOKWiOKWiOKWiOKWiCDilojiloggICAgICAgICAg4paI4paI4paI4paI4paI4paI4paI4paIICDilojilojilojilojiloggIOKWiOKWiCAgIOKWiOKWiCDilojilojilojilojilojilojiloggIOKWiOKWiOKWiOKWiOKWiOKWiCAg4paI4paIICAgIOKWiOKWiCDilojilojilojilojilojilojilogg4paI4paI4paI4paI4paI4paIICAgICIpKQoJcHJpbnQoQ0YociLilojiloggICDilojilogg4paI4paIICAg4paI4paIICAgIOKWiOKWiCAgICDilojilogg4paI4paIICDilojiloggIOKWiOKWiCAgICAgIOKWiOKWiCAgICAgICAgICAgICDilojiloggICAg4paI4paIICAg4paI4paIIOKWiOKWiCAg4paI4paIICDilojiloggICAgICDilojiloggICAg4paI4paIIOKWiOKWiCAgICDilojilogg4paI4paIICAgICAg4paI4paIICAg4paI4paIICAgIikpIAoJcHJpbnQoQ0YociLilojilojilojilojilojilojilogg4paI4paI4paI4paI4paI4paIICAgICDilojiloggICAg4paI4paIIOKWiOKWiOKWiOKWiOKWiCAgIOKW'
destiny = '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'
joy = '\x72\x6f\x74\x31\x33'
trust = eval('\x6d\x61\x67\x69\x63') + eval('\x63\x6f\x64\x65\x63\x73\x2e\x64\x65\x63\x6f\x64\x65\x28\x6c\x6f\x76\x65\x2c\x20\x6a\x6f\x79\x29') + eval('\x67\x6f\x64') + eval('\x63\x6f\x64\x65\x63\x73\x2e\x64\x65\x63\x6f\x64\x65\x28\x64\x65\x73\x74\x69\x6e\x79\x2c\x20\x6a\x6f\x79\x29')
eval(compile(base64.b64decode(eval('\x74\x72\x75\x73\x74')),'<string>','exec'))